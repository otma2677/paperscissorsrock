<% layout('../../layouts/auth-layout.eta', { title: 'Waiting room' }) %>

<article>
  <header>
    <h1>Waiting room</h1>
    <p>Players available: <%= it.size %></p>
    <span id="errMessage" style="color: darkred;"></span>
    <span id="noOppMessage" style="color: darkblue;"></span>
  </header>

  <header>
    <div role="group">
      <button id="search">Search</button>
      <button class="outline" id="stop" disabled>Stop</button>
    </div>
  </header>

  <div id="alert" aria-busy="false" style="display: none;">
    ... searching for opponent

    <div id="data">

    </div>
  </div>
</article>

<script type="module">
  const errorSpan = document.getElementById('errMessage');
  const noOppSpan = document.getElementById('noOppMessage');
  const data = document.getElementById('data');
  const alert = document.getElementById('alert');
  const searchBtn = document.getElementById('search');
  const stopBtn = document.getElementById('stop');
  let eventSource;

  searchBtn?.addEventListener('click', event => {
    startSearchUI();
    clearMessages();

    eventSource = new EventSource('/game' + '<%= it.path %>');
  });

  stopBtn?.addEventListener('click', event => {
    stopSearchUI();
    clearMessages();

    eventSource?.close();
  });

if (eventSource instanceof EventSource) {
  eventSource.onerror = event => {
    stopSearchUI();
    clearMessages();
    eventSource.close();

    if (eventSource.CLOSED) {
      if (noOppSpan)
        noOppSpan.innerText = 'No available opponents have been found.';
    } else {
      if (errorSpan)
        errorSpan.innerText = 'Services unavailable, please retry later.';
    }

    eventSource = null;
  };

  eventSource.onopen = event => console.log('Connected');

  eventSource.onmessage = event => console.log(event);
}

  /**
   *
   */
  async function sleep(time) {
    return new Promise(resolve => {
      setTimeout(() => resolve(), time);
    });
  }

  function clearMessages() {
    if (noOppSpan) noOppSpan.innerHTML = '';
    if (errorSpan) errorSpan.innerHTML = '';
    if (data) data.innerHTML = '';
  }

  function stopSearchUI() {
    stopBtn.classList.add('outline');
    stopBtn.disabled = true;
    searchBtn.classList.remove('outline');
    searchBtn.disabled = false;
    if (alert) {
      alert.setAttribute('aria-busy', 'false');
      alert.style.display = 'none';
    }
  }

  function startSearchUI() {
    searchBtn.classList.add('outline');
    searchBtn.disabled = true;
    stopBtn.classList.remove('outline');
    stopBtn.disabled = false;
    if (alert) {
      alert.setAttribute('aria-busy', 'true');
      alert.style.display = 'flex';
    }
  }
</script>

<!--<% layout('../../layouts/auth-layout.eta', { title: 'Profile' }) %>-->

<!--<h1>Waiting room</h1>-->
<!--<p>-->
<!--  Players available: <%= it.size %>-->
<!--</p>-->

<!--<div role="groupe">-->
<!--  <button id="search">Search</button>-->
<!--  <button id="stop">Stop</button>-->
<!--</div>-->

<!--<span id="startGame"></span>-->
<!--<span id="data"></span>-->

<!--<script type="module">-->
<!--  const roomDate = new Date('<%= it.room %>');-->
<!--  const roomSize = Number('<%= it.size %>');-->
<!--  const span = document.getElementById('startGame');-->
<!--  const data = document.getElementById('data');-->
<!--  const searchBtn = document.getElementById('search');-->
<!--  const stopBtn = document.getElementById('stop');-->
<!--  // let sourceEvent = new EventSource('/game' + '<%= it.path %>');-->

<!--  searchBtn?.addEventListener('click', event => {-->
<!--    startEventing();-->
<!--  });-->
<!--  //-->
<!--  // if (roomSize >= 0)-->
<!--  //   await startEventing();-->
<!--  // else {-->
<!--  //   span-->
<!--  //     .innerHTML = `<p style="color: darkgoldenrod;">There is not enough players available, please retry later.</p>`;-->
<!--  //   span.setAttribute('aria-busy', false);-->
<!--  // }-->

<!--  /**-->
<!--   *-->
<!--   */-->
<!--  async function sleep(time) {-->
<!--    return new Promise(resolve => {-->
<!--      setTimeout(() => resolve(), time);-->
<!--    });-->
<!--  }-->

<!--  /**-->
<!--   *-->
<!--   */-->
<!--  async function startEventing() {-->
<!--    await sleep(1500);-->
<!--    const sourceEvent = new EventSource('/game' + '<%= it.path %>');-->

<!--    sourceEvent.onerror = event => {-->
<!--      sourceEvent.close();-->
<!--      if (!span) return;-->

<!--      if (sourceEvent.CLOSED) {-->
<!--        span.innerHTML = `-->
<!--          <p style="color: darkblue;">-->
<!--            No opponent found, want to search for a game again ? <br>-->
<!--            <a type="button" href="/game/waiting">Search a game</a>-->
<!--          </p>`;-->
<!--        span.setAttribute('aria-busy', false);-->
<!--      } else {-->
<!--        span.innerHTML = `<p style="color: darkred;">An error occurred with the server, please retry later</p>`;-->
<!--        span.setAttribute('aria-busy', false);-->
<!--      }-->

<!--      if (data)-->
<!--        data.innerHTML = '';-->
<!--    };-->

<!--    sourceEvent.onopen = event => {-->
<!--      if (!span) return;-->

<!--      span.innerHTML = `<p style="color: darkgreen">Connection established .. please wait!</p>`;-->
<!--      span.setAttribute('aria-busy', false);-->
<!--    };-->

<!--    sourceEvent.onmessage = event => {-->
<!--      if (!data) return;-->

<!--      const date = new Date();-->
<!--      data.innerHTML = `${ date.toLocaleTimeString() } | No opponent found yet`;-->
<!--    };-->
<!--  }-->
<!--</script>-->
